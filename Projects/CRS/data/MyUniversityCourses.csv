PAC II,CSCI-GA.1144,4,Graduate-level. Spring.,Prerequisites: CSCI-GA 1133 or departmental permission.,"This course builds directly on the foundation developed in PAC I, covering the essentials of computer organization through the study of assembly language programming and C, as well as introducing the students to the analysis of algorithms. Topics include: (1) Assembly language programming for the Intel chip family, emphasizing computer organization, the Intel x86 instruction set, the logic of machine addressing, registers and the system stack. (2) Programming in the C language, a general-purpose programming language which also has low-level features for systems programming. (3) An introduction to algorithms, including searching, sorting, graph algorithms and asymptotic complexity. Examples and assignments reinforce and refine those first seen in PAC I and often connect directly to topics in the core computer science graduate courses, such as Programming Languages, Fundamental Algorithms, and Operating Systems",7,0,NULL,Mohamed Zahran,1,CIWW 312,https://cs.nyu.edu/media/faculty_photos/Zahran_16-0015_0337_250x250.jpg
Fundamental Algorithms,CSCI-GA.1170,3,"Graduate-level. Fall, Spring, Summer.","Prerequisites: At least one year of experience with a high-level language such as Pascal, C, C++, or Java; and familiarity with recursive programming methods and with data structures (arrays, pointers, stacks, queues, linked lists, binary trees).","Reviews a number of important algorithms, with emphasis on correctness and efficiency. The topics covered include solution of recurrence equations, sorting algorithms, selection, binary search trees and balanced-tree strategies, tree traversal, partitioning, graphs, spanning trees, shortest paths, connectivity, depth-first and breadth-first search, dynamic programming, and divide-and-conquer techniques.",4,0,NULL,Joel Spencer,1,CIWW 109,https://cs.nyu.edu/media/faculty_photos/Spencer_16-0015_1314_250x250.jpg
Programming Languages,CSCI-GA.2110,3,"Graduate-level. Fall, Spring, Summer.",Prerequisites: Students taking this class should already have substantial programming experience.,"Discusses the design, use, and implementation of imperative, object-oriented, and functional programming languages. The topics covered include scoping, type systems, control structures, functions, modules, object orientation, exception handling, and concurrency. A variety of languages are studied, including C++, Java, Ada, Lisp, and ML, and concepts are reinforced by programming exercises",7,0,NULL,Benjamin Goldberg,1,CIWW 109,https://cs.nyu.edu/media/faculty_photos/Goldberg_250x250.jpg
Operating Systems,CSCI-GA.2250,3,"Graduate-level. Fall, Spring, Summer.",Prerequisites: None,"The topics covered include a review of linkers and loaders and the high-level design of key operating systems concepts such as process scheduling and synchronization; deadlocks and their prevention; memory management, including (demand) paging and segmentation; and I/O and file systems, with examples from Unix/Linux and Windows. Programming assignments may require C, C++, Java, or C#.",5,0,NULL,Hubertus Franke,1,CIWW 109,https://cims.nyu.edu/~frankeh/hubertusfranke.jpg
Database Systems,CSCI-GA.2433,3,"Graduate-level. Fall, Spring.",Prerequisites: None,Database system architecture. Modeling an application and logical database design. The relational model and relational data definition and data manipulation languages. Design of relational databases and normalization theory. Physical database design. Concurrency and recovery. Query processing and optimization.,4,0,NULL,Zvi Kedem,1,CIWW 101,https://cs.nyu.edu/media/faculty_photos/Kedem_16-0015_0426_250x250.jpg
Software Engineering,CSCI-GA.2440,3,Graduate-level. Spring.,"Prerequisites: CSCI-GA 1170, CSCI-GA 2110, and CSCI-GA 2250","This is a capstone course focusing on large-scale software development. This course presents modern software engineering techniques and examines the software life cycle, including software specification, design, implementation, testing, and maintenance. Object-oriented design methods are also considered. Software engineering projects involve creation of a large-scale software system and require some or all of the following elements: formation of a small team, project proposal, literature review, interim report, project presentation, and final report.",7,0,NULL,Jean Claude Franchitti,1,CIWW 312,https://cs.nyu.edu/media/faculty_photos/Franchitti_250x250.jpg
Web Search Engines,CSCI-GA.2580,3,"Graduate-level. Fall, Spring.",Prerequisites: Recommend CSCI-GA 1180.,"Discusses the design of general and specialized Web search engines and the extraction of information from the results of Web search engines. Topics include Web crawlers, database design, query language, relevance ranking, document similarity and clustering, the �invisible� Web, specialized search engines, evaluation, natural language processing, data mining applied to the Web, and multimedia retrieval.",6,0,NULL,Ernest Davis,1,CIWW 102,https://cs.nyu.edu/media/faculty_photos/Davis_16-0015_0748_250x250.jpg
Special Topic: Big Data Science,CSCI-GA.3033,3,"Graduate-level. Fall, Spring, Summer.",Prerequisites: Prerequisites vary according to topic.,Topics vary each semester.,3,0,NULL,Anasse Bari,1,60 Fifth Ave C10,https://cs.nyu.edu/media/faculty_photos/Bari_16-0015_0795_250x250.jpg
Special Topic: Social Networks,CSCI-GA.3033,3,"Graduate-level. Fall, Spring, Summer.",Prerequisites: Prerequisites vary according to topic.,Topics vary each semester.,2,0,NULL,Bhubaneswar Mishra,2,CIWW 201,https://cs.nyu.edu/media/faculty_photos/Mishra_16-0015_0263_250x250.jpg
Special Topic: Cloud Computing,CSCI-GA.3033,3,"Graduate-level. Fall, Spring, Summer.",Prerequisites: Prerequisites vary according to topic.,Topics vary each semester.,4,0,NULL,Jean Claude Franchitti,10,CIWW 102,https://cs.nyu.edu/media/faculty_photos/Franchitti_250x250.jpg
Special Topic: DevOps,CSCI-GA.3033,3,"Graduate-level. Fall, Spring, Summer.",Prerequisites: Prerequisites vary according to topic.,Topics vary each semester.,1,0,NULL,John Rofrano,13,CIWW 317,https://avatars.githubusercontent.com/u/5069008?v=4
Intro To Computer Programming,CSCI-UA.0002,4,"Undergraduate-level. Fall, Spring, Summer.",Prerequisites: Three years of high school mathematics or equivalent. No prior computing experience is assumed. Students with any programming experience should consult with the department before registering. Students with any reported score on the Computer Science AP examination cannot enroll in this course; Albert will block them from registering for it. Students who have taken or are taking Introduction to Computer Science (CSCI-UA 101) will not receive credit for this course. Does not count toward the computer science major; serves as the prerequisite for students with no previous programming experience who want to continue into CSCI-UA 101 and pursue the major. Students may not receive credit for both CSCI-UA 2 and CSCI-UA 3.,"An introduction to the fundamentals of computer programming, which is the foundation of computer science. Students design, write, and debug computer programs. No knowledge of programming is assumed.",4,0,NULL,Joseph Versoza,2,CIWW 312,https://cs.nyu.edu/media/faculty_photos/Versoza_16-0015_0393_250x250.jpg
Intro To Computer Programming,CSCI-UA.0002,4,"Undergraduate-level. Fall, Spring, Summer.",Prerequisites: Three years of high school mathematics or equivalent. No prior computing experience is assumed. Students with any programming experience should consult with the department before registering. Students with any reported score on the Computer Science AP examination cannot enroll in this course; Albert will block them from registering for it. Students who have taken or are taking Introduction to Computer Science (CSCI-UA 101) will not receive credit for this course. Does not count toward the computer science major; serves as the prerequisite for students with no previous programming experience who want to continue into CSCI-UA 101 and pursue the major. Students may not receive credit for both CSCI-UA 2 and CSCI-UA 3.,"An introduction to the fundamentals of computer programming, which is the foundation of computer science. Students design, write, and debug computer programs. No knowledge of programming is assumed.",7,0,NULL,Craig Kapp,3,CIWW 109,https://cs.nyu.edu/media/faculty_photos/Kapp_16-0015_0937_250x250.jpg
Intro to Web Design & Computer Principles,CSCI-UA.0004,4,"Undergraduate-level. Fall, Spring, Summer.",Prerequisites: Three years of high school mathematics or equivalent. No prior computing experience is assumed. Students with computing experience should consult with the department before registering.,"Introduces students to both the practice of web design and the basic principles of computer science. The practice component covers not only web design but also current graphics and software tools. The principles section includes an overview of hardware and software, the history of computers, and a discussion of the impact of computers and the Internet.",6,0,NULL,Joshua Clayton,1,CIWW 102,https://cs.nyu.edu/media/faculty_photos/Clayton_16-0015_0908_250x250.jpg
Intro to Web Design & Computer Principles,CSCI-UA.0004,4,"Undergraduate-level. Fall, Spring, Summer.",Prerequisites: Three years of high school mathematics or equivalent. No prior computing experience is assumed. Students with computing experience should consult with the department before registering.,"Introduces students to both the practice of web design and the basic principles of computer science. The practice component covers not only web design but also current graphics and software tools. The principles section includes an overview of hardware and software, the history of computers, and a discussion of the impact of computers and the Internet.",4,0,NULL,Amos Bloomberg,4,60 Fifth Ave 150,https://cs.nyu.edu/media/faculty_photos/Bloomberg_250x250.jpg
Database Design And Web Implementation,CSCI-UA.0060,4,"Undergraduate-level. Fall, Spring.",Prerequisites: Introduction to Computer Programming (No Prior Experience) (CSCI-UA 2) or Introduction to Computer Programming (Limited Prior Experience) (CSCI-UA 3). Students that have successfully completed Data Management and Analysis (CSCI-UA 479) are NOT eligible to take this course.,"Introduces principles and applications of database design and working with data. Students use Python as they prepare, analyze, and work with data and use SQL to study the principles and implementations of relational databases. Also covers other database paradigms, such as NoSQL. Students apply these principles to computer systems and their respective fields of interest.",5,0,NULL,Deena Engel,1,60 Fifth Ave 110,https://cs.nyu.edu/media/faculty_photos/Engel_16-0015_0870_250x250_3WkUPpK.jpg
Web Development And Programming,CSCI-UA.0061,4,"Undergraduate-level. Fall, Spring.","Prerequisites: Introduction to Computer Programming (No Prior Experience) (CSCI-UA 2) or Introduction to Computer Programming (Limited Prior Experience) (CSCI-UA 3), and Introduction to Web Design and Computer Principles (CSCI-UA 4). Students that have successfully completed Applied Internet Technology (CSCI-UA 467) are NOT eligible to take this course.","Provides a practical approach to web technologies and programming. Students build interactive, secure, and powerful web programs. Covers client and server side technologies for the web.",3,0,NULL,Nathan Hull,1,CIWW 512,https://d3eguztg5751m.cloudfront.net/as/assets-mem-com/cmi/2/2/4/8/9308422/20200813_124235234_0_orig.jpg/-/nathan-hull-new-york-ny-photos1.jpg
Intro To Computer Science,CSCI-UA.0101,4,"Undergraduate-level. Fall, Spring.","Prerequisites: Introduction to Computer Programming (No Prior Experience) (CSCI-UA 2) or Introduction to Computer Programming (Limited Prior Experience) (CSCI-UA 3), or a score of 3 on the AP Computer Science exam (scores of 4 and 5 are acceptable prerequisites for students who wish to take CSCI-UA 101 before entering CSCI-UA 102; they will forfeit the AP credit), or departmental permission assessed by placement exam.",How to design algorithms to solve problems and how to translate these algorithms into working computer programs. Experience is acquired through projects in a high-level programming language. Intended primarily for computer science majors but also suitable for students of other scientific disciplines. Programming assignments.,4,0,NULL,Suzanne McIntosh,1,60 Fifth Ave 110,https://cds.nyu.edu/wp-content/uploads/2019/09/suzanne-mcintosh.jpg
Intro To Computer Science,CSCI-UA.0101,4,"Undergraduate-level. Fall, Spring.","Prerequisites: Introduction to Computer Programming (No Prior Experience) (CSCI-UA 2) or Introduction to Computer Programming (Limited Prior Experience) (CSCI-UA 3), or a score of 3 on the AP Computer Science exam (scores of 4 and 5 are acceptable prerequisites for students who wish to take CSCI-UA 101 before entering CSCI-UA 102; they will forfeit the AP credit), or departmental permission assessed by placement exam.",How to design algorithms to solve problems and how to translate these algorithms into working computer programs. Experience is acquired through projects in a high-level programming language. Intended primarily for computer science majors but also suitable for students of other scientific disciplines. Programming assignments.,6,0,NULL,Evan Korth,2,CIWW 102,https://cs.nyu.edu/media/faculty_photos/Korth_16-0015_1376_250x250.jpg
Data Structures,CSCI-UA.0102,4,"Undergraduate-level. Fall, Spring.","Prerequisites: Introduction to Computer Science (CSCI-UA 101), or a score of 4 or 5 on the AP Computer Science examination.","Use and design of data structures, which organize information in computer memory. Stacks, queues, linked lists, binary trees: how to implement them in a high-level language, how to analyze their effect on algorithm efficiency, and how to modify them. Programming assignments.",7,0,NULL,Anasse Bari,5,60 Fifth Ave 110,https://cs.nyu.edu/media/faculty_photos/Bari_16-0015_0795_250x250.jpg
Basic Algorithms,CSCI-UA.0310,4,"Undergraduate-level. Fall, Spring.",Prerequisites: Data Structures (CSCI-UA 102); Discrete Mathematics (MATH-UA 120); and either Calculus I (MATH-UA 121) OR Mathematics for Economics I (MATH-UA 211).,"Introduction to the study of algorithms. Presents two main themes: designing appropriate data structures and analyzing the efficiency of the algorithms that use them. Algorithms studied include sorting, searching, graph algorithms, and maintaining dynamic data structures. Homework assignments, not necessarily involving programming.",5,0,NULL,Victor Shoup,1,CIWW 109,https://cs.nyu.edu/media/faculty_photos/Shoup_16-0015_0725_250x250.jpg
Numerical Computing,CSCI-UA.0421,4,Undergraduate-level. Spring.,"Prerequisites: Computer Systems Organization (CSCI-UA 201), either Calculus I (MATH-UA 121) or both of Mathematics for Economics I and II (MATH-UA 211 and 212), and Linear Algebra (MATH-UA 140), or permission of instructor.","The need for floating-point arithmetic, the IEEE floating-point standard, and the importance of numerical computing in a wide variety of scientific applications. Fundamental types of numerical algorithms: direct methods (e.g., for systems of linear equations), iterative methods (e.g., for a nonlinear equation), and discretization methods (e.g., for a differential equation). Numerical errors: can you trust your answers? Uses graphics and software packages such as Matlab. Programming assignments.",4,0,NULL,Michael Overton,1,60 Fifth Ave C12,https://cs.nyu.edu/media/faculty_photos/Overton_16-0015_0604_250x250.jpg
Object Oriented Programming,CSCI-UA.0470,4,�Undergraduate-level. Fall.,Prerequisites: Computer Systems Organization (CSCI-UA 201).,"Introduces the important concepts of object-oriented design and languages, including code reuse, data abstraction, inheritance, and dynamic overloading. Covers in depth those features of Java and C++ that support object-oriented programming and gives an overview of other object-oriented languages of interest. Significant programming assignments stressing object-oriented design. Not offered every academic year.",3,0,NULL,Thomas Wies,1,CIWW 102,https://cs.nyu.edu/media/faculty_photos/Wies_16-0015_0573_250x250.jpg
Intro To Machine Learning,CSCI-UA.0473,4,Undergraduate-level. Spring.,"Prerequisites: Data Structures (CSCI-UA.102), Linear Algebra (MATH-UA.140) and �Probability and Statistics (MATH-UA.235). Students may take any of the following courses in place of MATH-UA.235: Theory of Probability (MATH-UA 233), Mathematical Statistics (MATH-UA 234), Honors Theory of Probability (MATH-UA 238) OR Statistics for Business Control and Regression Models (STAT-UB 103)","This exciting and fast-evolving field of computer science has many recent consumer applications (e.g., Microsoft Kinect, Google Translate, IPhone's Siri, digital camera face detection, Netflix recommendations, Google news) and applications within the sciences and medicine (e.g., predicting protein-protein interactions, species modeling, detecting tumors, personalized medicine). Students learn the theoretical foundations and how to apply machine learning to solve new problems.",4,0,NULL,Kyunghyun Cho,1,60 Fifth Ave C12,https://cs.nyu.edu/media/faculty_photos/Cho_16-0015_1000_250x250.jpg
Introduction to Robotics,CSCI-UA.0465,4,Undergraduate-level.,"Prerequisites: Operating Systems (CSCI-UA 202), Calculus I (MATH-UA 121) and Linear Algebra (MATH-UA 140).","Robots are basically computers with sensors and actuators (motors) that interact with the physical world. Unmanned Autonomous Vehicles (UAV) including mobile robots and quadcopters are increasing being deployed in society. But these robots are only as good as the algorithms that run on them. This course looks at some basic algorithmic tasks that robots must solve: collision detection, motion planning, coordination, and the Simultaneous Localization and Mapping (SLAM) problem. Through such algorithms, we introduce students to elements of computational geometry, kinematics, dynamics and control theory. The course will be a mix of theory, algorithms and programming, culminating in a final project. Programming will be in Matlab (including Simulink) and C++/OpenGL programming. A reference is Peter Corke's Robotics Book based on Matlab. Not offered every academic year.",2,0,NULL,Chee Yap,1,CIWW 312,https://cs.nyu.edu/media/faculty_photos/Yap_16-0015_0061_250x250.jpg
